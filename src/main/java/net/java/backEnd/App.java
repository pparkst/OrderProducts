/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package net.java.backEnd;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import com.microsoft.sqlserver.jdbc.StringUtils;

import net.java.backEnd.order.OrderItemVO;
import net.java.backEnd.order.Impl.OrderDAOImpl;
import net.java.backEnd.product.ProductVO;
import net.java.backEnd.product.Impl.ProductDAOImpl;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.text.DecimalFormat;

public class App {
    public String getGreeting() {
        return "입력(o[order]: 주문, q[quit]: 종료):";
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        boolean beginApp = true;
        
        while(beginApp){
            System.out.print(new App().getGreeting());

            ProductDAOImpl productDao = new ProductDAOImpl();
            OrderDAOImpl orderDao = new OrderDAOImpl();
            
            String flag;
            String input;
            int productNo;
            int orderStock;
            List<Integer> ordered = new ArrayList<Integer>();
            boolean orderStatus = false;

            flag = sc.nextLine();

            switch(flag){
                case "o":
                    System.out.println("상품번호\t\t 상품명 \t\t\t\t 판매가격 \t 재고수");
                    for(ProductVO prd : productDao.getProductList()){
                        System.out.println(prd.getNo() + " " + prd.getType() + " " + prd.getName() + " " + prd.getPrice() + " " + prd.getStockCnt());
                    }
                    System.out.println("\n결제하기 : 상품번호 : Space -> Enter\n");
                
                    while(true){
                        System.out.print("상품번호 : ");
                        input = sc.nextLine();
                        if(StringUtils.isEmpty(input.trim())){
                            String res = orderDao.orderCheck();

                            if(res.equals("")){
                                orderStatus = orderDao.checkOut();
                            }

                            break;
                        }else{
                            productNo = Integer.parseInt(input);
                        }
                        System.out.print("수량 : ");
                        orderStock = Integer.parseInt(sc.nextLine());

                        ProductVO prd = productDao.getProduct(productNo);

                        if(prd.getType() == 0){
                            for(int orderedPrdNo : ordered){
                                if(orderedPrdNo == productNo){
                                    System.out.println("이미 주문하신 이벤트입니다.");
                                    continue;
                                }
                            }
                            if(orderStock > 1){
                                System.out.println("이벤트는 1개 수량만 주문이 가능합니다. 다시 주문해주세요.");
                                continue;
                            }

                            ordered.add(productNo);
                        }

                        OrderItemVO item = new OrderItemVO(productNo, prd.getName(), orderStock);
                        orderDao.addOrderItem(item);
                    }

                    
                    if(orderStatus){
                        BigDecimal totalPrice = new BigDecimal(0);
                        BigDecimal orderItemPrice = orderDao.renderOrderPrice(productDao).setScale(0, RoundingMode.HALF_UP);
                        BigDecimal deliveryPrice = new BigDecimal(orderDao.getOrderInfo().getDeliveryPrice());

                        totalPrice = totalPrice.add(orderItemPrice);
                        totalPrice = totalPrice.add(deliveryPrice);



                        System.out.println("주문 내역 :");
                        System.out.println("-----------------------------------------------");
                        for(OrderItemVO item : orderDao.getOrderItems()){
                            System.out.println(String.format("%s - %s개", item.getProductName(), item.getOrderStock()));
                        }
                        System.out.println("-----------------------------------------------");
                        DecimalFormat formatter = new DecimalFormat("###,###");
                        System.out.println(String.format("주문금액 : %s원", formatter.format(orderItemPrice)));
                        System.out.println(String.format("배송비 : %s원", formatter.format(deliveryPrice)));
                        System.out.println("-----------------------------------------------");
                        System.out.println(String.format("지불금액 : %s원", formatter.format(totalPrice)));
                        System.out.println("-----------------------------------------------");
                    }
                    continue;
                case "q":
                    System.out.println("고객님의 주문 감사합니다.");
                    sc.close();
                    beginApp = false;
            }
        }
    }
}
